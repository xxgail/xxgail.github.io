{"title":"ThinkPHP5.0笔记","slug":"ThinkPHP5.0笔记","date":"2017-11-20T08:35:02.000Z","updated":"2018-04-26T06:19:12.752Z","comments":true,"path":"api/articles/ThinkPHP5.0笔记.json","photos":[],"link":"","excerpt":"百度云地址","covers":["http://ozp0vvyub.bkt.clouddn.com/tp.png","http://ozp0vvyub.bkt.clouddn.com/blog/171121/mah977cBAh.jpg?imageslim","http://ozp0vvyub.bkt.clouddn.com/blog/171121/Gi36lB8CI5.jpg?imageslim"],"content":"<p><a href=\"https://pan.baidu.com/s/1jI1n6Fc\" target=\"_blank\" rel=\"noopener\">百度云地址</a></p>\n<a id=\"more\"></a>\n<p><img src=\"http://ozp0vvyub.bkt.clouddn.com/tp.png\" alt=\"\"></p>\n<h1 id=\"第一章-基本结构\"><a href=\"#第一章-基本结构\" class=\"headerlink\" title=\"第一章 基本结构\"></a>第一章 基本结构</h1><h2 id=\"1-目录结构：\"><a href=\"#1-目录结构：\" class=\"headerlink\" title=\"1.目录结构：\"></a>1.目录结构：</h2><pre><code>project  应用部署目录\n├─application           应用目录（可设置）\n│  ├─common             公共模块目录（可更改）\n│ ├─admin              后台目录\n│  ├─index              前台目录(可更改)\n│  │  ├─config.php      模块配置文件\n│  │  ├─common.php      模块函数文件\n│  │  ├─controller      控制器目录\n│  │  ├─model           模型目录\n│  │  ├─view            视图目录\n│  │  └─ ...            更多类库目录\n│  ├─command.php        命令行工具配置文件\n│  ├─common.php         应用公共（函数）文件\n│  ├─config.php         应用（公共）配置文件\n│  ├─database.php       数据库配置文件\n│  ├─tags.php           应用行为扩展定义文件\n│  └─route.php          路由配置文件\n├─extend                扩展类库目录（可定义）\n├─public                静态资源和入口文件\n│  ├─static             静态资源存放目录(css,js,image)\n│  ├─index.php          应用入口文件\n│  ├─router.php         快速测试文件\n│  └─.htaccess          用于 apache 的重写\n├─runtime               网站运行临时目录（可写，可设置）\n├─vendor                第三方类库目录（Composer）\n├─thinkphp              框架系统目录\n│  ├─lang               语言包目录\n│  ├─library            TP框架核心类库目录\n│  │  ├─think           Think 类库包目录\n│  │  └─traits          系统 Traits 目录\n│  ├─tpl                系统模板目录\n│  ├─.htaccess          用于 apache 的重写\n│  ├─.travis.yml        CI 定义文件\n│  ├─base.php           基础定义文件\n│  ├─composer.json      composer 定义文件\n│  ├─console.php        控制台入口文件\n│  ├─convention.php     惯例配置文件\n│  ├─helper.php         助手函数文件（可选）\n│  ├─LICENSE.txt        授权说明文件\n│  ├─phpunit.xml        单元测试配置文件\n│  ├─README.md          README 文件\n│  └─start.php          框架引导文件\n├─build.php             自动生成定义文件（参考）\n├─composer.json         composer 定义文件\n├─LICENSE.txt           授权说明文件\n├─README.md             README 文件\n├─think                 命令行入口文件\n</code></pre><h2 id=\"2-URL解析\"><a href=\"#2-URL解析\" class=\"headerlink\" title=\"2.URL解析\"></a>2.URL解析</h2><p>http://    www.tp5.com   /index.php     /Index    /Index      /index<br>协议         域名            入口文件      模块       控制器     方法</p>\n<h1 id=\"第二章-初步了解\"><a href=\"#第二章-初步了解\" class=\"headerlink\" title=\"第二章 初步了解\"></a>第二章 初步了解</h1><h2 id=\"1-入口文件\"><a href=\"#1-入口文件\" class=\"headerlink\" title=\"1.入口文件\"></a>1.入口文件</h2><ol>\n<li>目录：www/tp5/public/index.php</li>\n<li>作用：负责整个tp的请求</li>\n</ol>\n<h2 id=\"2-应用\"><a href=\"#2-应用\" class=\"headerlink\" title=\"2.应用\"></a>2.应用</h2><ol>\n<li>目录：www/tp5/application</li>\n<li>作用：一个应用代表一个网站</li>\n</ol>\n<h2 id=\"3-模块（以前台为例）\"><a href=\"#3-模块（以前台为例）\" class=\"headerlink\" title=\"3.模块（以前台为例）\"></a>3.模块（以前台为例）</h2><ol>\n<li>目录：www/tp5/application/Index</li>\n<li>网站所有的前台相关都与其有关</li>\n<li>新建后台模块：<ol>\n<li>在application下新建一个admin文件夹</li>\n<li>在admin下创建model，View，controller文件夹</li>\n<li>在controller文件夹下新建控制器（参照6）</li>\n</ol>\n</li>\n</ol>\n<h2 id=\"4-控制器\"><a href=\"#4-控制器\" class=\"headerlink\" title=\"4.控制器\"></a>4.控制器</h2><ol>\n<li>目录：www/tp5/application/Index/controller</li>\n<li>作用：书写业务逻辑</li>\n<li>新建控制器（前台<ol>\n<li>在前台控制器目录下新建User.php</li>\n<li>在控制器中书写代码</li>\n<li>地址栏访问     www.tp5.com/index.php/Index/User/index</li>\n<li>注意：<ol>\n<li>必须声明命名空间</li>\n<li>文件名大写，文件夹小写</li>\n<li>类名与文件名一致</li>\n</ol>\n</li>\n</ol>\n</li>\n</ol>\n<h2 id=\"5-操作（方法）\"><a href=\"#5-操作（方法）\" class=\"headerlink\" title=\"5.操作（方法）\"></a>5.操作（方法）</h2><ol>\n<li>操作地址：<br>操作一般都在控制器的文件中</li>\n<li>新建一个操作（前台<ol>\n<li>打开前台index控制器 www/tp5/application/Index/controller/index.php</li>\n<li>在控制器中新建一个方法(test</li>\n<li>地址栏访问</li>\n</ol>\n</li>\n</ol>\n<h2 id=\"6-模型\"><a href=\"#6-模型\" class=\"headerlink\" title=\"6.模型\"></a>6.模型</h2><ol>\n<li>目录：www/tp5/application/index/model</li>\n<li>作用：负责数据库相关的处理</li>\n</ol>\n<h2 id=\"7-视图\"><a href=\"#7-视图\" class=\"headerlink\" title=\"7.视图\"></a>7.视图</h2><ol>\n<li>目录：www/tp5/application/index/view</li>\n<li>作用：页面展示</li>\n</ol>\n<h2 id=\"8-命名空间\"><a href=\"#8-命名空间\" class=\"headerlink\" title=\"8.命名空间\"></a>8.命名空间</h2><ol>\n<li>与目录有关</li>\n</ol>\n<h2 id=\"9-跨模块-控制器调用\"><a href=\"#9-跨模块-控制器调用\" class=\"headerlink\" title=\"9.跨模块/控制器调用\"></a>9.跨模块/控制器调用</h2><ol>\n<li><p>使用命名空间</p>\n <figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$model = <span class=\"keyword\">new</span> \\app\\admin\\controller\\Index;</span><br><span class=\"line\"><span class=\"keyword\">echo</span> $model-&gt;index();</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>使用新的命名空间</p>\n <figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">app</span>\\<span class=\"title\">admin</span>\\<span class=\"title\">controller</span>\\<span class=\"title\">Index</span> <span class=\"title\">as</span> <span class=\"title\">AdminIndex</span>;</span><br><span class=\"line\"><span class=\"comment\">//因为控制器重名所以起一个别名</span></span><br><span class=\"line\"></span><br><span class=\"line\">    $model = <span class=\"keyword\">new</span> AdminIndex();</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> $model-&gt;index();</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>使用controller方法</p>\n <figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$model = controller(<span class=\"string\">'admin/Index'</span>);</span><br><span class=\"line\"><span class=\"keyword\">echo</span> $model-&gt;index();</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h2 id=\"10-调用方法\"><a href=\"#10-调用方法\" class=\"headerlink\" title=\"10.调用方法\"></a>10.调用方法</h2><ol>\n<li><p>调用当前控制器的方法</p>\n <figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//调用当前控制器的index方法</span></span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"keyword\">$this</span>-&gt;index();</span><br><span class=\"line\"><span class=\"keyword\">echo</span> <span class=\"keyword\">self</span>::index();</span><br><span class=\"line\"><span class=\"keyword\">echo</span> Index::index();</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//使用action方法调用</span></span><br><span class=\"line\"><span class=\"keyword\">echo</span> action(<span class=\"string\">'index'</span>);</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>调用其他控制器中的方法</p>\n <figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//使用命名空间</span></span><br><span class=\"line\">$model = <span class=\"keyword\">new</span> \\app\\index\\controller\\User;</span><br><span class=\"line\"><span class=\"keyword\">echo</span> $model-&gt;index();</span><br><span class=\"line\"><span class=\"comment\">//使用系统方法</span></span><br><span class=\"line\"><span class=\"keyword\">echo</span> action(<span class=\"string\">'User/index'</span>);</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<ol>\n<li><p>调用跨模块系统方法</p>\n <figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//使用后台模块中的index方法</span></span><br><span class=\"line\"><span class=\"keyword\">echo</span> action(<span class=\"string\">'admin/Index/index'</span>);</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h1 id=\"第三章-TP5配置\"><a href=\"#第三章-TP5配置\" class=\"headerlink\" title=\"第三章 TP5配置\"></a>第三章 TP5配置</h1><h2 id=\"1-基本配置\"><a href=\"#1-基本配置\" class=\"headerlink\" title=\"1.基本配置\"></a>1.基本配置</h2><h3 id=\"1-配置方式（数组）\"><a href=\"#1-配置方式（数组）\" class=\"headerlink\" title=\"1. 配置方式（数组）\"></a>1. 配置方式（数组）</h3><pre><code><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">return</span> [</span><br><span class=\"line\">    <span class=\"comment\">// 数据库类型</span></span><br><span class=\"line\">    <span class=\"string\">'type'</span>            =&gt; <span class=\"string\">'mysql'</span>,</span><br><span class=\"line\">    <span class=\"comment\">// 服务器地址</span></span><br><span class=\"line\">    <span class=\"string\">'hostname'</span>        =&gt; <span class=\"string\">'127.0.0.1'</span>,</span><br><span class=\"line\">];</span><br></pre></td></tr></table></figure>\n</code></pre><h3 id=\"2-配置分类\"><a href=\"#2-配置分类\" class=\"headerlink\" title=\"2. 配置分类\"></a>2. 配置分类</h3><ol>\n<li><p>惯例配置（一般不要修改</p>\n<pre><code>1. 目录：D:\\wamp\\www\\tp5\\thinkphp\\convention.php\n</code></pre><ol>\n<li>应用配置<ol>\n<li>目录：D:\\wamp\\www\\tp5\\application\\config.php</li>\n</ol>\n</li>\n<li><p>扩展配置</p>\n<ol>\n<li>作用：其实就是对配置文件进行分目录的管理</li>\n<li>目录：D:\\wamp\\www\\tp5\\application\\database.php<br>D:\\wamp\\www\\tp5\\application\\extra\\用户可以自定义配置文件</li>\n<li>读取配置：（database中的 <figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">echo</span> config(<span class=\"string\">'database.password'</span>);</span><br><span class=\"line\"><span class=\"keyword\">echo</span> config(<span class=\"string\">'database'</span>);<span class=\"comment\">//配置文件的名字.配置名称</span></span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n</li>\n<li><p>场景配置</p>\n<ol>\n<li>解决问题:开发过程中可能在不同环境下进行开发</li>\n<li>如何使用<ol>\n<li>修改配置（D:\\wamp\\www\\tp5\\application\\config.php） <figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">            <span class=\"comment\">// 应用模式状态</span></span><br><span class=\"line\">            <span class=\"string\">'app_status'</span>    =&gt; <span class=\"string\">'home'</span>,（或修改为office）</span><br><span class=\"line\">            ``` </span><br><span class=\"line\">        <span class=\"number\">2.</span> 新建home.php进行配置（D:\\wamp\\www\\tp5\\application\\extra\\）</span><br><span class=\"line\"><span class=\"number\">5.</span> 模块配置</span><br><span class=\"line\">    <span class=\"number\">1.</span> 解决问题:每一个模块都有自己特有的配置</span><br><span class=\"line\">    <span class=\"number\">2.</span> 如何使用（前台</span><br><span class=\"line\">        <span class=\"number\">1.</span> 在前台目录下新建config.php进行配置</span><br><span class=\"line\"><span class=\"number\">6.</span> 动态配置</span><br><span class=\"line\">    <span class=\"number\">1.</span> 如何配置</span><br><span class=\"line\">        ```php</span><br><span class=\"line\">            <span class=\"comment\">//通过系统方法</span></span><br><span class=\"line\">            config(<span class=\"string\">'name'</span>,<span class=\"string\">'php开发'</span>);</span><br><span class=\"line\">            <span class=\"keyword\">echo</span> config(<span class=\"string\">'name'</span>);</span><br><span class=\"line\">            <span class=\"comment\">//通过类</span></span><br><span class=\"line\">            \\think\\Config::set(<span class=\"string\">'name'</span>,<span class=\"string\">'web开发'</span>);</span><br><span class=\"line\">            <span class=\"keyword\">echo</span> config(<span class=\"string\">'name'</span>);  </span><br><span class=\"line\">            <span class=\"comment\">//引用命名空间</span></span><br><span class=\"line\">            <span class=\"keyword\">use</span> \\<span class=\"title\">think</span>\\<span class=\"title\">Config</span>;</span><br><span class=\"line\">            Config::set(<span class=\"string\">'name'</span>,<span class=\"string\">'ThinkPHP'</span>);</span><br><span class=\"line\">            <span class=\"keyword\">echo</span> config(<span class=\"string\">'name'</span>);</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n</li>\n</ol>\n</li>\n</ol>\n</li>\n</ol>\n<h3 id=\"3-读取配置\"><a href=\"#3-读取配置\" class=\"headerlink\" title=\"3. 读取配置\"></a>3. 读取配置</h3><ol>\n<li><p>如果配置项存在直接输出，不存在返回NULL。config参数为空时读取所有配置</p>\n <figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//系统函数读取配置</span></span><br><span class=\"line\"><span class=\"keyword\">echo</span> config(<span class=\"string\">'name'</span>);    </span><br><span class=\"line\"><span class=\"comment\">//读取系统类读取配置</span></span><br><span class=\"line\"><span class=\"keyword\">echo</span> \\think\\Config::get(<span class=\"string\">'name'</span>);</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>获取数组中的配置信息</p>\n <figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">echo</span> config(<span class=\"string\">'teacher.name'</span>);</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h3 id=\"4-系统类\"><a href=\"#4-系统类\" class=\"headerlink\" title=\"4. 系统类\"></a>4. 系统类</h3><ol>\n<li>目录：D:\\wamp\\www\\tp5\\thinkphp\\library\\think<br> Config 设置和获取配置文件</li>\n</ol>\n<h3 id=\"5-系统方法\"><a href=\"#5-系统方法\" class=\"headerlink\" title=\"5. 系统方法\"></a>5. 系统方法</h3><ol>\n<li>目录：D:\\wamp\\www\\tp5\\thinkphp\\helper.php<ul>\n<li>Controller 实例化控制器</li>\n<li>action 调试模块的操作方法</li>\n<li>config 设置和获取配置</li>\n<li>dump 打印数据</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"6-配置文件之间的加载顺序\"><a href=\"#6-配置文件之间的加载顺序\" class=\"headerlink\" title=\"6. 配置文件之间的加载顺序\"></a>6. 配置文件之间的加载顺序</h3><ol>\n<li>优先级 动态配置&gt;模块配置&gt;场景配置&gt;扩展配置&gt;应用配置&gt;惯例配置</li>\n<li>加载顺序 惯例配置-&gt;应用配置-&gt;扩展配置-&gt;场景配置-&gt;模块配置-&gt;动态配置</li>\n<li>实现原理 array_merge() 后面加载的数据对前面加载的数据进行同名覆盖</li>\n</ol>\n<h3 id=\"7-环境变量配置\"><a href=\"#7-环境变量配置\" class=\"headerlink\" title=\"7. 环境变量配置\"></a>7. 环境变量配置</h3><ol>\n<li>TP5.0支持环境变量配置</li>\n<li><p>设置环境变量配置</p>\n<ol>\n<li>打开网站根目录 新建.env</li>\n<li>书写环境设置（不能写中文，会报错）<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">name = gail</span><br><span class=\"line\">age = <span class=\"number\">20</span></span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n</li>\n<li><p>读取环境配置</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//命名空间</span></span><br><span class=\"line\">var_dump(\\think\\Env::get(<span class=\"string\">'name'</span>));</span><br><span class=\"line\">var_dump(\\think\\Env::get(<span class=\"string\">'age'</span>,<span class=\"string\">'bucunzai'</span>));</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//use导入类</span></span><br><span class=\"line\"><span class=\"keyword\">use</span> \\<span class=\"title\">think</span>\\<span class=\"title\">Env</span>;</span><br><span class=\"line\">var_dump(Env::get(<span class=\"string\">'name'</span>));</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>如何使用 打开任意配置文件</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">use</span> \\<span class=\"title\">think</span>\\<span class=\"title\">Env</span>;</span><br><span class=\"line\"><span class=\"keyword\">return</span> [</span><br><span class=\"line\"><span class=\"string\">'app_namespace'</span> =&gt; <span class=\"string\">'app'</span>,</span><br><span class=\"line\"><span class=\"string\">'app_debug'</span> =&gt; Env::get(<span class=\"string\">'app_debug'</span>,<span class=\"keyword\">false</span>),       </span><br><span class=\"line\">]</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h1 id=\"第四章-TP5-0-路由\"><a href=\"#第四章-TP5-0-路由\" class=\"headerlink\" title=\"第四章 TP5.0 路由\"></a>第四章 TP5.0 路由</h1><h2 id=\"1-路由\"><a href=\"#1-路由\" class=\"headerlink\" title=\"1.路由\"></a>1.路由</h2><ol>\n<li>路由的作用：<ol>\n<li>简化URL地址</li>\n<li>有利于搜索引擎优化</li>\n</ol>\n</li>\n</ol>\n<h2 id=\"2-入口文件\"><a href=\"#2-入口文件\" class=\"headerlink\" title=\"2. 入口文件\"></a>2. 入口文件</h2><ol>\n<li>前后台分离<ol>\n<li>在网站public目录下新建一个后台入口文件admin.php</li>\n<li>打开admin.php<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 定义应用目录</span></span><br><span class=\"line\">define(<span class=\"string\">'APP_PATH'</span>, <span class=\"keyword\">__DIR__</span> . <span class=\"string\">'/../application/'</span>);</span><br><span class=\"line\"><span class=\"comment\">// 加载框架引导文件</span></span><br><span class=\"line\"> <span class=\"keyword\">require</span> <span class=\"keyword\">__DIR__</span> . <span class=\"string\">'/../thinkphp/start.php'</span>;</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n</li>\n</ol>\n<ol>\n<li><p>绑定模块</p>\n<ol>\n<li>实现功能<ul>\n<li>index.php 这个入口文件 只能去前台模块</li>\n<li>admin.php 这个入口文件 只能去后台模块 #建议后台的入口文件稍微复杂一些</li>\n</ul>\n</li>\n<li>如何实现  在入口文件中分别定义<ul>\n<li>define(“BIND_MODULE”,’index’); # 绑定前台模块<ul>\n<li>define(“BIND_MODULE”,’admin’); # 绑定后台模块</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>URL地址发生改变<ol>\n<li>入口绑定之前<br><a href=\"http://www.tp.com/admin.php/模块/控制器/方法\" target=\"_blank\" rel=\"noopener\">http://www.tp.com/admin.php/模块/控制器/方法</a></li>\n<li>入口绑定之后<br><a href=\"http://www.tp.com/admin.php/控制器/方法\" target=\"_blank\" rel=\"noopener\">http://www.tp.com/admin.php/控制器/方法</a></li>\n</ol>\n</li>\n</ol>\n</li>\n<li><p>隐藏入口文件</p>\n<ol>\n<li><p>开启apache的重写(C:\\AppServ\\Apache24\\conf\\httpd.conf)</p>\n<figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#把注释开启</span></span><br><span class=\"line\"><span class=\"attribute\"><span class=\"nomarkup\">LoadModule</span></span> rewrite_module modules/mod_rewrite.so</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>设置访问权限 (C:\\AppServ\\Apache24\\conf\\extra\\httpd-vhosts.conf)</p>\n<figure class=\"highlight taggerscript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">   &lt;VirtualHost *:80&gt;</span><br><span class=\"line\">\tDocumentRoot \"C:<span class=\"symbol\">\\A</span>ppServ<span class=\"symbol\">\\w</span>ww<span class=\"symbol\">\\t</span>p5<span class=\"symbol\">\\p</span>ublic\"</span><br><span class=\"line\">\tServerName www.tp5.com</span><br><span class=\"line\">&lt;Directory \"C:<span class=\"symbol\">\\A</span>ppServ<span class=\"symbol\">\\w</span>ww<span class=\"symbol\">\\t</span>p5<span class=\"symbol\">\\p</span>ublic\"</span><br><span class=\"line\"> \tOptions Indexes FollowSymLinks</span><br><span class=\"line\"> \tAllowOverride All</span><br><span class=\"line\"> \tRequire all granted</span><br><span class=\"line\"> &lt;/Directory&gt;</span><br><span class=\"line\">&lt;/VirtualHost&gt;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>入口文件,在网站public目录下新建.htaccess 文件</p>\n<figure class=\"highlight plain\"><figcaption><span>mod_rewrite.c></span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">  Options +FollowSymlinks -Multiviews</span><br><span class=\"line\">  RewriteEngine On</span><br><span class=\"line\">  RewriteCond %&#123;REQUEST_FILENAME&#125; !-d</span><br><span class=\"line\">  RewriteCond %&#123;REQUEST_FILENAME&#125; !-f</span><br><span class=\"line\">  RewriteRule ^(.*)$ index.php/$1 [QSA,PT,L]</span><br><span class=\"line\">&lt;/IfModule&gt;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>重启服务</p>\n</li>\n<li>url地址变化<ol>\n<li>隐藏之前 <a href=\"http://www.tp.com/index.php/Index/test\" target=\"_blank\" rel=\"noopener\">http://www.tp.com/index.php/Index/test</a></li>\n<li>隐藏之后 <a href=\"http://www.tp.com/Index/test\" target=\"_blank\" rel=\"noopener\">http://www.tp.com/Index/test</a></li>\n</ol>\n</li>\n</ol>\n</li>\n</ol>\n<h2 id=\"3-Tp5-0路由学习注意\"><a href=\"#3-Tp5-0路由学习注意\" class=\"headerlink\" title=\"3. Tp5.0路由学习注意:\"></a>3. Tp5.0路由学习注意:</h2><ol>\n<li>支持三种方式的URL解析规则</li>\n<li>路由只针对应用，不针对模块，因此路由的设置也是针对应用下面的所有模块。</li>\n<li>关闭后台模块,在后台入口文件(C:\\AppServ\\www\\tp5\\public\\admin.php) <figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 关闭admin模块的路由</span></span><br><span class=\"line\"><span class=\"comment\">// 必须写到 加载框架引导文件 之后否则报错</span></span><br><span class=\"line\">\\think\\App::route(<span class=\"keyword\">false</span>);</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h2 id=\"4-路由模式（默认是混合模式）\"><a href=\"#4-路由模式（默认是混合模式）\" class=\"headerlink\" title=\"4. 路由模式（默认是混合模式）\"></a>4. 路由模式（默认是混合模式）</h2><ol>\n<li><p>普通模式</p>\n<ol>\n<li>定义 关闭路由，完全使用默认的 PATH_INFO 方式URL：</li>\n<li>形式 <a href=\"http://www.tp.com/admin.php/index/index\" target=\"_blank\" rel=\"noopener\">http://www.tp.com/admin.php/index/index</a></li>\n<li>如何设置（config.php）<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 是否开启路由</span></span><br><span class=\"line\"><span class=\"string\">'url_route_on'</span>           =&gt; <span class=\"keyword\">false</span>,</span><br><span class=\"line\"><span class=\"comment\">// 是否强制使用路由</span></span><br><span class=\"line\"><span class=\"string\">'url_route_must'</span>         =&gt; <span class=\"keyword\">false</span>,</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n</li>\n<li><p>混合模式</p>\n<ol>\n<li>定义:<br> 开启路由，并使用路由定义+默认 PATH_INFO 方式的混合</li>\n<li>如何设置<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 是否开启路由</span></span><br><span class=\"line\"><span class=\"string\">'url_route_on'</span>           =&gt; <span class=\"keyword\">true</span>,</span><br><span class=\"line\"><span class=\"comment\">// 是否强制使用路由</span></span><br><span class=\"line\"><span class=\"string\">'url_route_must'</span>         =&gt; <span class=\"keyword\">false</span>,</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n</li>\n<li><p>强制模式</p>\n<ol>\n<li>定义:<br> 开启路由，并设置必须定义路由才能访问</li>\n<li>如何设置<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 是否开启路由</span></span><br><span class=\"line\"><span class=\"string\">'url_route_on'</span>           =&gt; <span class=\"keyword\">true</span>,</span><br><span class=\"line\"><span class=\"comment\">// 是否强制使用路由</span></span><br><span class=\"line\"><span class=\"string\">'url_route_must'</span>         =&gt; <span class=\"keyword\">true</span>,</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n</li>\n</ol>\n<h2 id=\"5-设置路由-动态单个注册\"><a href=\"#5-设置路由-动态单个注册\" class=\"headerlink\" title=\"5. 设置路由-动态单个注册\"></a>5. 设置路由-动态单个注册</h2><ol>\n<li>设置路由格式<br> Route::rule(‘路由表达式’,’路由地址’,’请求类型’,’路由参数（数组）’,’变量规则（数组）’)</li>\n<li>设置路由文件<br> C:\\AppServ\\www\\tp5\\application\\route.php</li>\n<li><p>如何设置</p>\n <figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">   <span class=\"comment\">// 引入系统类&lt;br&gt;</span></span><br><span class=\"line\">   <span class=\"keyword\">use</span> <span class=\"title\">think</span>\\<span class=\"title\">Route</span>;&lt;br&gt;</span><br><span class=\"line\"><span class=\"comment\">// 定义路由规则&lt;br&gt;</span></span><br><span class=\"line\"><span class=\"comment\">// 设置路由之后，就不能使用pathinfo访问了&lt;br&gt;</span></span><br><span class=\"line\"><span class=\"comment\">// 注册路由 访问到Index模块index控制器index方法&lt;br&gt;</span></span><br><span class=\"line\">Route::rule(<span class=\"string\">'/'</span>,<span class=\"string\">'index/index/index'</span>);&lt;br&gt;</span><br><span class=\"line\"><span class=\"comment\">// 注册路由test 访问到Index模块index控制器test方法&lt;br&gt;</span></span><br><span class=\"line\">Route::rule(<span class=\"string\">'test'</span>,<span class=\"string\">'index/index/test'</span>);</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>路由的形式</p>\n<ol>\n<li><p>静态地址路由</p>\n <figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 注册路由test 访问到Index模块. ndex控制器test方法</span></span><br><span class=\"line\">Route::rule(<span class=\"string\">'test'</span>,<span class=\"string\">'index/index/test'</span>);</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>路由带参数</p>\n <figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 注册带参数路由</span></span><br><span class=\"line\"><span class=\"comment\">// http://www.tp.com/couser/1</span></span><br><span class=\"line\">   <span class=\"comment\">// http://www.tp.com/index/index/index/id/1</span></span><br><span class=\"line\">   Route::rule(<span class=\"string\">'course/:id'</span>,<span class=\"string\">'index/index/course'</span>);</span><br><span class=\"line\"><span class=\"comment\">// 如果路由设置两个参数，必须带两个参数</span></span><br><span class=\"line\">Route::rule(<span class=\"string\">'time/:year/:month'</span>,<span class=\"string\">'index/index/shijian'</span>);</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>可选参数路由</p>\n <figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// http://www.tp.com/time/2017</span></span><br><span class=\"line\"><span class=\"comment\">// http://www.tp.com/time/2017/8</span></span><br><span class=\"line\">Route::rule(<span class=\"string\">'time/:year/[:month]'</span>,<span class=\"string\">'index/index/shijian'</span>);</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>全动态路由(不建议大家使用)<br> <code>Route::rule(&#39;:a/:b&#39;,&#39;index/index/dongtai&#39;);</code></p>\n</li>\n<li><p>完全匹配路由</p>\n <figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// http://www.tp.com/test1 #可以成功访问</span></span><br><span class=\"line\"> <span class=\"comment\">// http://www.tp.com/test1/1 #不能访问</span></span><br><span class=\"line\"> Route::rule(<span class=\"string\">'test1$'</span>,<span class=\"string\">'Index/index/test1'</span>);</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>路由额外带参数<br> <code>Route::rule(&#39;test2&#39;,&#39;Index/index/test2?id=10&amp;name=zhangsan&#39;);</code></p>\n</li>\n</ol>\n</li>\n<li><p>设置请求类型</p>\n<ol>\n<li>TP中请求类型<br> get、post、put、delete</li>\n<li>Route::rule() 默认支持所有请求类型</li>\n<li><p>设置各种请求</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">          <span class=\"comment\">// 支持get请求</span></span><br><span class=\"line\">      Route::rule(<span class=\"string\">'type'</span>,<span class=\"string\">'Index/index/type'</span>,<span class=\"string\">'get'</span>);</span><br><span class=\"line\">      Route::get(<span class=\"string\">'type'</span>,<span class=\"string\">'Index/index/type'</span>);</span><br><span class=\"line\">          <span class=\"comment\">// 支持post请求</span></span><br><span class=\"line\">      Route::rule(<span class=\"string\">'type'</span>,<span class=\"string\">'Index/index/type'</span>,<span class=\"string\">'post'</span>);</span><br><span class=\"line\">      Route::post(<span class=\"string\">'type'</span>,<span class=\"string\">'Index/index/type'</span>);</span><br><span class=\"line\">          <span class=\"comment\">// 同时支持get和post</span></span><br><span class=\"line\">      Route::rule(<span class=\"string\">'type'</span>,<span class=\"string\">'Index/index/type'</span>,<span class=\"string\">'get|post'</span>);</span><br><span class=\"line\">      \t<span class=\"comment\">// 支持所有路由</span></span><br><span class=\"line\">      Route::rule(<span class=\"string\">'type'</span>,<span class=\"string\">'Index/index/type'</span>,<span class=\"string\">'*'</span>);</span><br><span class=\"line\">      Route::any(<span class=\"string\">'type'</span>,<span class=\"string\">'Index/index/type'</span>);</span><br><span class=\"line\">      \t<span class=\"comment\">// 支持put请求</span></span><br><span class=\"line\">      Route::rule(<span class=\"string\">'type'</span>,<span class=\"string\">'Index/index/type'</span>,<span class=\"string\">'put'</span>);</span><br><span class=\"line\">Route::put(<span class=\"string\">'type'</span>,<span class=\"string\">'Index/index/type'</span>);</span><br><span class=\"line\">      \t<span class=\"comment\">// 支持delete请求</span></span><br><span class=\"line\">      Route::rule(<span class=\"string\">'type'</span>,<span class=\"string\">'Index/index/type'</span>,<span class=\"string\">'delete'</span>);</span><br><span class=\"line\">      Route::delete(<span class=\"string\">'type'</span>,<span class=\"string\">'Index/index/type'</span>);</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>如何模拟put和delete请求</p>\n</li>\n</ol>\n</li>\n</ol>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">form</span> <span class=\"attr\">action</span>=<span class=\"string\">\"type\"</span> <span class=\"attr\">method</span>=<span class=\"string\">\"post\"</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"hidden\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"_method\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"PUT\"</span>&gt;</span>**</span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"text\"</span> <span class=\"attr\">name</span>=<span class=\"string\">\"name\"</span> <span class=\"attr\">id</span>=<span class=\"string\">\"\"</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">type</span>=<span class=\"string\">\"submit\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"提交\"</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">form</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"6-设置路由-动态批量注册\"><a href=\"#6-设置路由-动态批量注册\" class=\"headerlink\" title=\"6. 设置路由-动态批量注册\"></a>6. 设置路由-动态批量注册</h2><ol>\n<li><p>基本格式<br> Route::rule([<br><br> ‘路由规则1’=&gt;’路由地址和参数’,<br><br> ‘路由规则2’=&gt;[‘路由地址和参数’,’匹配参数（数组）’,’变量规则（数组）’]<br><br> ],’’,’请求类型’,’匹配参数（数组）’,’变量规则’);<br></p>\n</li>\n<li><p>使用</p>\n <figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Route::rule([</span><br><span class=\"line\">\t\t<span class=\"string\">\"test\"</span>=&gt;<span class=\"string\">\"index/index/test\"</span>,</span><br><span class=\"line\">\t\t<span class=\"string\">\"course/:id\"</span>=&gt;<span class=\"string\">\"index/index/course\"</span></span><br><span class=\"line\">\t],<span class=\"string\">''</span>,<span class=\"string\">'get'</span>);</span><br><span class=\"line\">\tRoute::get([</span><br><span class=\"line\">\t\t<span class=\"string\">\"test\"</span>=&gt;<span class=\"string\">\"index/index/test\"</span>,</span><br><span class=\"line\">\t\t<span class=\"string\">\"course/:id\"</span>=&gt;<span class=\"string\">\"index/index/course\"</span></span><br><span class=\"line\">\t]);</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h2 id=\"7-设置路由-配置文件批量注册\"><a href=\"#7-设置路由-配置文件批量注册\" class=\"headerlink\" title=\"7. 设置路由-配置文件批量注册\"></a>7. 设置路由-配置文件批量注册</h2><ol>\n<li> <figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">return</span> [</span><br><span class=\"line\">    <span class=\"string\">\"test\"</span>=&gt;<span class=\"string\">\"index/index/test\"</span>,</span><br><span class=\"line\">    <span class=\"string\">\"course/:id\"</span>=&gt;<span class=\"string\">\"index/index/course\"</span>   </span><br><span class=\"line\"> ];</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h2 id=\"8-变量规则\"><a href=\"#8-变量规则\" class=\"headerlink\" title=\"8. 变量规则\"></a>8. 变量规则</h2><ol>\n<li> <figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// Route::rule('路由表达式','路由地址','请求类型','路由参数（数组）','变量规则（数组）');&lt;br&gt;</span></span><br><span class=\"line\"><span class=\"comment\">// 设置路由参数id必须是数字，必须1-3位&lt;br&gt;</span></span><br><span class=\"line\">Route::rule(<span class=\"string\">\"course/:id\"</span>,<span class=\"string\">\"index/index/course\"</span>,<span class=\"string\">'get'</span>,[],[<span class=\"string\">'id'</span>=&gt;<span class=\"string\">'\\d&#123;1,3&#125;'</span>]);</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h2 id=\"9-路由参数\"><a href=\"#9-路由参数\" class=\"headerlink\" title=\"9. 路由参数\"></a>9. 路由参数</h2><ol>\n<li> <figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// Route::rule('路由表达式','路由地址','请求类型','路由参数（数组）','变量规则（数组）');&lt;br&gt;</span></span><br><span class=\"line\">Route::rule(<span class=\"string\">\"course/:id\"</span>,<span class=\"string\">\"index/index/course\"</span>,<span class=\"string\">'get'</span>,[<span class=\"string\">'method'</span>=&gt;<span class=\"string\">'get'</span>,<span class=\"string\">'ext'</span>=&gt;<span class=\"string\">'html'</span>],[<span class=\"string\">'id'</span>=&gt;<span class=\"string\">'\\d&#123;1,3&#125;'</span>]);br&gt;</span><br><span class=\"line\"><span class=\"comment\">// 路由参数method 请求方式必须是get&lt;br&gt;</span></span><br><span class=\"line\"><span class=\"comment\">// 路由参数ext 主要设置路由的后缀</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p><img src=\"http://ozp0vvyub.bkt.clouddn.com/blog/171121/mah977cBAh.jpg?imageslim\" alt=\"mark\"></p>\n</li>\n</ol>\n<h2 id=\"10-资源路由\"><a href=\"#10-资源路由\" class=\"headerlink\" title=\"10. 资源路由\"></a>10. 资源路由</h2><ol>\n<li>声明<br> Route::resource(‘blog’,’index/blog’);</li>\n<li>会自动注册七个路由规则<br><img src=\"http://ozp0vvyub.bkt.clouddn.com/blog/171121/Gi36lB8CI5.jpg?imageslim\" alt=\"mark\"></li>\n</ol>\n<h2 id=\"11-设置快捷路由\"><a href=\"#11-设置快捷路由\" class=\"headerlink\" title=\"11. 设置快捷路由\"></a>11. 设置快捷路由</h2><ol>\n<li><p>声明<br> Route::Controller(‘blog’,’index/blog’);</p>\n</li>\n<li><p>控制器中</p>\n <figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">app</span>\\<span class=\"title\">index</span>\\<span class=\"title\">controller</span>;</span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Blog</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span>  <span class=\"title\">getindex</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">echo</span> <span class=\"string\">\"我是bolg控制器index方法\"</span>;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">geta</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">        \t<span class=\"keyword\">echo</span> <span class=\"string\">\"AAAAAAAA\"</span>;</span><br><span class=\"line\">        \t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<ol>\n<li>URL访问<br> <a href=\"http://www.tp.com/blog/a\" target=\"_blank\" rel=\"noopener\">http://www.tp.com/blog/a</a><br><br> <a href=\"http://www.tp.com/blog/index\" target=\"_blank\" rel=\"noopener\">http://www.tp.com/blog/index</a><br></li>\n</ol>\n<h2 id=\"12-生成url地址\"><a href=\"#12-生成url地址\" class=\"headerlink\" title=\"12. 生成url地址\"></a>12. 生成url地址</h2><ol>\n<li>系统类<br> dump(Url::build(‘index/index/index’));</li>\n<li>系统方法<br> dump(url(‘index/index/index’));</li>\n<li><p>使用</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">        <span class=\"comment\">// 普通url地址</span></span><br><span class=\"line\">    dump(Url::build(<span class=\"string\">'index/index/index'</span>));</span><br><span class=\"line\">    dump(url(<span class=\"string\">'index/index/index'</span>));</span><br><span class=\"line\">        <span class=\"comment\">// 带参数url</span></span><br><span class=\"line\">    dump(url(<span class=\"string\">'index/index/abc'</span>,[<span class=\"string\">'id'</span>=&gt;<span class=\"number\">10</span>,<span class=\"string\">'name'</span>=&gt;<span class=\"string\">\"张三\"</span>]));</span><br><span class=\"line\">    dump(url(<span class=\"string\">'index/index/abc'</span>,<span class=\"string\">'id=10&amp;name=100'</span>));</span><br><span class=\"line\">    <span class=\"comment\">// string(45) \"/index/abc/id/10/name/%E5%BC%A0%E4%B8%89.html\"</span></span><br><span class=\"line\">    <span class=\"comment\">// string(30) \"/index/abc/id/10/name/100.html\"</span></span><br><span class=\"line\">        <span class=\"comment\">// 带锚点</span></span><br><span class=\"line\">    dump(url(<span class=\"string\">'index/index/abc#name'</span>,[<span class=\"string\">'id'</span>=&gt;<span class=\"number\">10</span>,<span class=\"string\">'name'</span>=&gt;<span class=\"string\">\"100\"</span>]));</span><br><span class=\"line\">    <span class=\"comment\">// string(35) \"/index/abc/id/10/name/100.html#name\"</span></span><br><span class=\"line\">        <span class=\"comment\">// 带域名</span></span><br><span class=\"line\">    dump(url(<span class=\"string\">'index/index/abc#name@blog'</span>,[<span class=\"string\">'id'</span>=&gt;<span class=\"number\">10</span>,<span class=\"string\">'name'</span>=&gt;<span class=\"string\">\"100\"</span>]));</span><br><span class=\"line\">    <span class=\"comment\">// string(53) \"http://blog.tp.com/index/abc/id/10/name/100.html#name\"</span></span><br><span class=\"line\">        <span class=\"comment\">// 加入口文件</span></span><br><span class=\"line\">    Url::root(<span class=\"string\">'/index.php'</span>);</span><br><span class=\"line\">    dump(url(<span class=\"string\">'index/index/abc#name@blog'</span>,[<span class=\"string\">'id'</span>=&gt;<span class=\"number\">10</span>,<span class=\"string\">'name'</span>=&gt;<span class=\"string\">\"100\"</span>]));</span><br><span class=\"line\">    <span class=\"comment\">// string(63) \"http://blog.tp.com/index.php/index/abc/id/10/name/100.html#name\"</span></span><br><span class=\"line\">```       </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 第5章 TP5.0 控制器</span></span><br><span class=\"line\"><span class=\"comment\">## 1. 新建控制器(前台模块为例)\t</span></span><br><span class=\"line\"><span class=\"number\">1.</span> 在前台控制器目录下(C:\\AppServ\\www\\tp5\\application\\index\\controller) </span><br><span class=\"line\">    新建控制器文件 User.php</span><br><span class=\"line\"><span class=\"number\">2.</span> User.php文件中如何书写</span><br><span class=\"line\">    ```php</span><br><span class=\"line\">    <span class=\"comment\">// 声明命名空间</span></span><br><span class=\"line\">    <span class=\"keyword\">namespace</span> <span class=\"title\">app</span>\\<span class=\"title\">index</span>\\<span class=\"title\">controller</span>;</span><br><span class=\"line\">    <span class=\"comment\">// 声明控制器</span></span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">User</span></span>&#123;</span><br><span class=\"line\">    \t<span class=\"comment\">// 声明方法</span></span><br><span class=\"line\">    \t<span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">index</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">    \t\t<span class=\"keyword\">return</span> <span class=\"string\">\"我是User控制器下的index方法\"</span>;</span><br><span class=\"line\">    \t&#125;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>地址栏访问 <a href=\"http://www.tp.com/index.php/Index/user/index\" target=\"_blank\" rel=\"noopener\">http://www.tp.com/index.php/Index/user/index</a></p>\n</li>\n<li>注意:<ol>\n<li>控制器文件名必须首字母大写,文件名采用驼峰命名。</li>\n<li>控制器名必须跟文件名一一对应</li>\n<li>命名空间必须和文件名对应<br> namespace app\\index\\controller;<br> C:\\AppServ\\www\\tp5\\application\\index\\controller</li>\n<li>如果控制器名字采用驼峰命名 UserInfo.php<br><a href=\"http://www.tp.com/index.php/Index/user_info/index\" target=\"_blank\" rel=\"noopener\">http://www.tp.com/index.php/Index/user_info/index</a></li>\n</ol>\n</li>\n</ol>\n<h2 id=\"2-控制器如何加载页面\"><a href=\"#2-控制器如何加载页面\" class=\"headerlink\" title=\"2. 控制器如何加载页面\"></a>2. 控制器如何加载页面</h2><ol>\n<li><p>系统View类</p>\n</li>\n<li><p>系统Controller类</p>\n<ol>\n<li><p>需要继承系统控制器类</p>\n <figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">think</span>\\<span class=\"title\">Controller</span>;</span><br><span class=\"line\"><span class=\"comment\">// 声明控制器</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">User</span> <span class=\"keyword\">extends</span> <span class=\"title\">Controller</span></span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>直接使用系统控制器类的方法<br><code>return $this-&gt;fetch();</code></p>\n</li>\n<li>系统函数<br> <code>return view();</code></li>\n</ol>\n</li>\n</ol>\n<h2 id=\"3-数据输出\"><a href=\"#3-数据输出\" class=\"headerlink\" title=\"3. 数据输出\"></a>3. 数据输出</h2><ol>\n<li><p>在应用配置文件中可以设置数据返回格式</p>\n<pre><code>&apos;default_return_type&apos;    =&gt; &apos;json&apos;, #默认是html\n</code></pre></li>\n<li><p>ajax请求的时候如何返回数据</p>\n<pre><code>&apos;default_ajax_return&apos;    =&gt; &apos;json&apos;,\n</code></pre></li>\n</ol>\n<h2 id=\"4-控制器的初始化\"><a href=\"#4-控制器的初始化\" class=\"headerlink\" title=\"4. 控制器的初始化\"></a>4. 控制器的初始化</h2><ol>\n<li>控制器初始化方法必须继承系统控制器</li>\n</ol>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 控制器的初始化方法</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">_initialize</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">echo</span> <span class=\"string\">\"我是初始化方法\"</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ol>\n<li>只要调用控制器下的任意方法，都会先找初始化方法</li>\n<li>控制器初始化方法的使用<ol>\n<li>可以用来提取控制器下公共的代码</li>\n<li>后台权限把控</li>\n</ol>\n</li>\n</ol>\n<h2 id=\"5-前置操作\"><a href=\"#5-前置操作\" class=\"headerlink\" title=\"5.前置操作\"></a>5.前置操作</h2><ol>\n<li>前置方法 把一些公共的设置提取成方法进行调用</li>\n<li>前置方法必须结合系统控制器</li>\n<li>核心设置<pre><code>// 前置方法属性\nprotected $beforeActionList=[\n    &apos;one&apos;,\n    // 不想让谁使用前置方法two\n    &apos;two&apos;=&gt;[&apos;except&apos;=&gt;&quot;index&quot;],\n    // 仅仅可以让谁使用前置方法three\n    &apos;three&apos;=&gt;[&apos;only&apos;=&gt;&apos;index&apos;],\n];    \n</code></pre></li>\n</ol>\n<h2 id=\"6-页面跳转\"><a href=\"#6-页面跳转\" class=\"headerlink\" title=\"6.页面跳转\"></a>6.页面跳转</h2><ol>\n<li><p>页面跳转基于系统控制器类，所以控制器必须继承系统控制器</p>\n</li>\n<li><p>方法所在路径<br> C:\\AppServ\\www\\tp5\\thinkphp\\library\\traits\\controlle\\Jump.php</p>\n</li>\n<li><p>跳转方式</p>\n<ol>\n<li><p>成功跳转</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"comment\">// $this-&gt;success(提示信息,跳转地址,用户自定义数据,跳转跳转,header信息);</span></span><br><span class=\"line\"><span class=\"comment\">// 跳转地址未设置时 默认返回上一个页面</span></span><br><span class=\"line\"> <span class=\"keyword\">$this</span>-&gt;success(<span class=\"string\">'跳转成功'</span>,url(<span class=\"string\">'index/index'</span>));</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>失败跳转 <code>$this-&gt;error(&#39;登录失败&#39;);</code></p>\n</li>\n</ol>\n</li>\n<li><p>跳转方法给模板页面的数据</p>\n<ol>\n<li>$code 返回的状态码 成功 1 失败 0</li>\n<li>$msg 页面的提示信息</li>\n<li>$wait 等待时间</li>\n<li>$url 制定跳转页面 默认返回上一个页面</li>\n<li>$data 用户返回的数据</li>\n</ol>\n</li>\n<li><p>相关配置文件</p>\n<pre><code><figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 默认跳转页面对应的模板文件</span></span><br><span class=\"line\"><span class=\"string\">'dispatch_success_tmpl'</span>  =&gt; THINK_PATH . <span class=\"string\">'tpl'</span> . DS . <span class=\"string\">'dispatch_jump.tpl'</span>,</span><br><span class=\"line\"><span class=\"string\">'dispatch_error_tmpl'</span>    =&gt; THINK_PATH . <span class=\"string\">'tpl'</span> . DS . <span class=\"string\">'dispatch_jump.tpl'</span>,</span><br></pre></td></tr></table></figure>\n</code></pre></li>\n<li><p>修改成功和失败的模板页面</p>\n<ol>\n<li>修改默认文件<ol>\n<li>默认文件位置<br> C:\\AppServ\\www\\tp5\\thinkphp\\tpl\\dispatch_jump.php</li>\n<li>根据原有代码进行修改<br> 在成功失败模板页面进行修改</li>\n</ol>\n</li>\n<li>用户自定义页面跳转模板<ol>\n<li>修改配置文件<br> ‘dispatch_success_tmpl’  =&gt; THINK_PATH . ‘tpl’ . DS . ‘success.tpl’,<br> ‘dispatch_error_tmpl’    =&gt; THINK_PATH . ‘tpl’ . DS . ‘error.tpl’,</li>\n<li>在系统模板目录下 (C:\\AppServ\\www\\tp5\\thinkphp\\tpl) 新建 success.php 和error.php</li>\n</ol>\n</li>\n<li>自定义书写跳转页面 可以用bootstrap</li>\n</ol>\n</li>\n</ol>\n<h2 id=\"7-重定向\"><a href=\"#7-重定向\" class=\"headerlink\" title=\"7.重定向\"></a>7.重定向</h2><ol>\n<li>作用：重定向(Redirect)就是通过各种方法将各种网络请求重新定个方向转到其它位置</li>\n<li>使用:<pre><code>redirect(&apos;跳转地址&apos;,&apos;其他参数&apos;,code,&apos;隐士参数&apos;);\n$this-&gt;redirect(&apos;index/index&apos;,[&apos;id&apos;=&gt;100,&apos;name&apos;=&gt;&apos;abc&apos;]);\n</code></pre></li>\n</ol>\n<h2 id=\"8-空控制器和空操作\"><a href=\"#8-空控制器和空操作\" class=\"headerlink\" title=\"8.空控制器和空操作\"></a>8.空控制器和空操作</h2><ol>\n<li>空操作</li>\n</ol>\n<figure class=\"highlight php\"><figcaption><span># 主要解决一些用户恶意的地址栏输入，报错影响交互</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">_empty</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">$this</span>-&gt;redirect(<span class=\"string\">'index/index'</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ol>\n<li><p>空控制器</p>\n  <figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 声明命名空间</span></span><br><span class=\"line\"><span class=\"keyword\">namespace</span> <span class=\"title\">app</span>\\<span class=\"title\">index</span>\\<span class=\"title\">controller</span>;</span><br><span class=\"line\"><span class=\"keyword\">use</span> <span class=\"title\">think</span>\\<span class=\"title\">Controller</span>;</span><br><span class=\"line\"><span class=\"comment\">// 声明控制器</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Error</span> <span class=\"keyword\">extends</span> <span class=\"title\">Controller</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"comment\">// index</span></span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">index</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">$this</span>-&gt;redirect(<span class=\"string\">'index/index'</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"comment\">// 空操作</span></span><br><span class=\"line\">\t<span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">_empty</span><span class=\"params\">()</span></span>&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">$this</span>-&gt;redirect(<span class=\"string\">'index/index'</span>);\t\t</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>注意:<br> 1、网站上线的时候每一个控制器都必须添加空操作<br> 2、不论前台后台都需要写一个空控制器</p>\n</li>\n</ol>\n<h2 id=\"9-使用命令行\"><a href=\"#9-使用命令行\" class=\"headerlink\" title=\"9.使用命令行\"></a>9.使用命令行</h2><ol>\n<li>切换到网站的根目录下</li>\n<li>输入php think</li>\n<li>使用<ol>\n<li>创建控制器<pre><code>php think make:controller app\\index\\controller\\Goods\n</code></pre></li>\n<li>创建数据模型<pre><code>php think make:model app\\index\\model\\Goods\n</code></pre></li>\n<li>清空runtime 临时文件<pre><code>php think clear\n</code></pre></li>\n</ol>\n</li>\n</ol>\n<h2 id=\"10-资源控制器\"><a href=\"#10-资源控制器\" class=\"headerlink\" title=\"10.资源控制器\"></a>10.资源控制器</h2><ol>\n<li>使用命令行创建控制器<pre><code>php think make:controller app\\index\\controller\\Goods\n</code></pre></li>\n<li>资源控制器一般配合资源路由使用</li>\n</ol>\n<h1 id=\"第6章-TP5-0-请求和响应\"><a href=\"#第6章-TP5-0-请求和响应\" class=\"headerlink\" title=\"第6章 TP5.0 请求和响应\"></a>第6章 TP5.0 请求和响应</h1><h2 id=\"1-系统类-C-AppServ-www-tp5-thinkphp-library-think\"><a href=\"#1-系统类-C-AppServ-www-tp5-thinkphp-library-think\" class=\"headerlink\" title=\"1.系统类(C:\\AppServ\\www\\tp5\\thinkphp\\library\\think)\"></a>1.系统类(C:\\AppServ\\www\\tp5\\thinkphp\\library\\think)</h2><ul>\n<li>Config</li>\n<li>Controller</li>\n<li>Env</li>\n<li>Route</li>\n<li>Url</li>\n<li>View</li>\n<li>Request </li>\n</ul>\n<h2 id=\"2-系统方法-C-AppServ-www-tp5-thinkphp-helper-php\"><a href=\"#2-系统方法-C-AppServ-www-tp5-thinkphp-helper-php\" class=\"headerlink\" title=\"2.系统方法(C:\\AppServ\\www\\tp5\\thinkphp\\helper.php)\"></a>2.系统方法(C:\\AppServ\\www\\tp5\\thinkphp\\helper.php)</h2><ul>\n<li>dump();  格式化输出</li>\n<li>controller(); 调用控制器</li>\n<li>action(); 调用方法</li>\n<li>config(); 读取和设置配置文件</li>\n<li>url(); 生成URL地址</li>\n<li>view(); 加载页面</li>\n<li>request(); 实例化 Request类</li>\n</ul>\n<h2 id=\"3-如何获取请求类\"><a href=\"#3-如何获取请求类\" class=\"headerlink\" title=\"3.如何获取请求类\"></a>3.如何获取请求类</h2><ol>\n<li>系统函数<br> $request=request();</li>\n<li>系统Request类</li>\n</ol>\n<figure class=\"highlight php\"><figcaption><span>use think\\Request;</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 因为Request类属于单例模式 所以 不能直接new</span></span><br><span class=\"line\">  \t\t$request=Request::instance();</span><br></pre></td></tr></table></figure>\n<ol>\n<li>系统Request类</li>\n</ol>\n<figure class=\"highlight php\"><figcaption><span>use think\\Request;</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 方法的书写</span></span><br><span class=\"line\">  \t\t<span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">index</span><span class=\"params\">(Request $request)</span></span></span><br><span class=\"line\"><span class=\"function\">  \t\t</span>&#123;</span><br><span class=\"line\">  \t\t\tdump($request);</span><br><span class=\"line\">  \t\t&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"4-获取用户请求信息\"><a href=\"#4-获取用户请求信息\" class=\"headerlink\" title=\"4.获取用户请求信息\"></a>4.获取用户请求信息</h2><ol>\n<li>获取域名<br>dump($request-&gt;domain());</li>\n<li>获取URL地址 除域名以外<br>dump($request-&gt;url());</li>\n<li>获取入口文件<br>dump($request-&gt;baseFile());</li>\n<li>获取PathInfo路径<br>dump($request-&gt;pathinfo());</li>\n<li>获取PATHINFO路径 无后缀<br>dump($request-&gt;path());</li>\n<li>url地址伪静态后缀<br>dump($request-&gt;ext());</li>\n<li>伪静态<br>就是将路径伪装成静态页面，让搜索引擎更好收录网站，防止别人知道网站真实开发语言</li>\n</ol>\n<h2 id=\"5-获取请求模块-控制器-方法\"><a href=\"#5-获取请求模块-控制器-方法\" class=\"headerlink\" title=\"5.获取请求模块\\控制器\\方法\"></a>5.获取请求模块\\控制器\\方法</h2><ol>\n<li>控制器<pre><code>$request-&gt;controller();\n</code></pre></li>\n<li>方法<pre><code>$request-&gt;action();\n</code></pre></li>\n<li>模块<pre><code>$request-&gt;module();\n</code></pre></li>\n</ol>\n<h2 id=\"6-获取请求相关类型\"><a href=\"#6-获取请求相关类型\" class=\"headerlink\" title=\"6.获取请求相关类型\"></a>6.获取请求相关类型</h2><ol>\n<li><p>请求类型<br> $request-&gt;method();</p>\n</li>\n<li><p>请求资源类型<br> $request-&gt;type();</p>\n</li>\n<li><p>访问地址<br> $request-&gt;ip();</p>\n</li>\n<li><p>是否ajax请求<br> $request-&gt;isAjax();</p>\n</li>\n<li><p>获取所有地址栏参数<br> $request-&gt;param();</p>\n</li>\n<li><p>获取特定字段<br> $request-&gt;only([‘name’,’id’]);</p>\n</li>\n<li><p>剔除字段<br> $request-&gt;except([‘name’,’id’]);</p>\n</li>\n</ol>\n<h2 id=\"7-获取变量\"><a href=\"#7-获取变量\" class=\"headerlink\" title=\"7.获取变量\"></a>7.获取变量</h2><ol>\n<li><p>判断是否存在</p>\n<figure class=\"highlight lisp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dump($request-&gt;has('id','get'))<span class=\"comment\">;</span></span><br><span class=\"line\">dump(<span class=\"name\">input</span>('get.id'))<span class=\"comment\">;</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>读取变量</p>\n<figure class=\"highlight lisp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">dump($request-&gt;get('id'))<span class=\"comment\">;</span></span><br><span class=\"line\">dump(<span class=\"name\">input</span>('get.id'))<span class=\"comment\">;</span></span><br><span class=\"line\">dump($request-&gt;get())<span class=\"comment\">;</span></span><br><span class=\"line\">dump(<span class=\"name\">input</span>('get.'))<span class=\"comment\">;</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>可以读取数据类型<br> get、post、delete、put、session、cookie、server 等</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$request-&gt;get();</span><br><span class=\"line\">$request-&gt;post();</span><br><span class=\"line\">$request-&gt;put();</span><br><span class=\"line\">$request-&gt;server();</span><br><span class=\"line\">$request-&gt;request();</span><br><span class=\"line\">$request-&gt;session();</span><br><span class=\"line\">$request-&gt;cookie();</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<h2 id=\"8-变量的过滤\"><a href=\"#8-变量的过滤\" class=\"headerlink\" title=\"8.变量的过滤\"></a>8.变量的过滤</h2><ol>\n<li><p>作用<br> 防止恶意输入、防止sql注入</p>\n</li>\n<li><p>使用</p>\n<ol>\n<li><p>全部的数据进行过滤    </p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 单个方法过滤</span></span><br><span class=\"line\">$request-&gt;filter(<span class=\"string\">\"htmlspecialchars\"</span>);</span><br><span class=\"line\"><span class=\"comment\">// 多种方法过滤</span></span><br><span class=\"line\">$request-&gt;filter([<span class=\"string\">\"htmlspecialchars\"</span>,<span class=\"string\">\"strip_tags\"</span>]);</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>针对变量过滤     </p>\n<pre><code>`$request-&gt;get(&apos;name&apos;,&apos;&apos;,&apos;htmlspecialchars&apos;);`\n</code></pre></li>\n<li><p>密码过滤之后加密</p>\n<pre><code>`dump($request-&gt;get(&apos;pass&apos;,&apos;&apos;,&apos;htmlspecialchars,md5&apos;));`\n</code></pre></li>\n</ol>\n</li>\n</ol>\n<h2 id=\"9-变量的排除和获取\"><a href=\"#9-变量的排除和获取\" class=\"headerlink\" title=\"9.变量的排除和获取\"></a>9.变量的排除和获取</h2><ol>\n<li><p>获取</p>\n<pre><code>$request-&gt;only(&apos;name&apos;);\n$request-&gt;only(&apos;name&apos;,get);\n$request-&gt;only([&apos;name&apos;,&apos;pass&apos;],get);\n</code></pre></li>\n<li><p>排除</p>\n<pre><code>$request-&gt;except([&apos;name&apos;,&apos;pass&apos;],get);\n$request-&gt;except([&apos;name&apos;,&apos;pass&apos;]);\n$request-&gt;except(&apos;name&apos;);\n</code></pre></li>\n</ol>\n<h2 id=\"10-变量修饰符\"><a href=\"#10-变量修饰符\" class=\"headerlink\" title=\"10.变量修饰符\"></a>10.变量修饰符</h2><ol>\n<li><p>修饰变量的类型</p>\n<ul>\n<li>s 字符串</li>\n<li>d 整形</li>\n<li>f 浮点型</li>\n<li>a 数组</li>\n<li>b 布尔型</li>\n</ul>\n</li>\n<li><p>使用</p>\n<pre><code>dump(input(&apos;get.id/d&apos;)); // 强制转换整形\n\ndump($request-&gt;get(&apos;id/d&apos;));\n</code></pre></li>\n</ol>\n<h2 id=\"11-更改变量\"><a href=\"#11-更改变量\" class=\"headerlink\" title=\"11.更改变量\"></a>11.更改变量</h2><pre><code>// 地址栏访问 http://www.tp.com/index.php/Index/Index/xiugai?id=10\ndump($request-&gt;get(&apos;id&apos;));  // 10\ndump($request-&gt;get([&apos;id&apos;=&gt;20]));  //数组\ndump($request-&gt;get(&apos;id&apos;));  // 20\n</code></pre><h2 id=\"12-请求类型判断\"><a href=\"#12-请求类型判断\" class=\"headerlink\" title=\"12.请求类型判断\"></a>12.请求类型判断</h2><ol>\n<li><p>系统类</p>\n<pre><code>// 判断是否是get请求\ndump($request-&gt;isGet());\n// 判断是否是手机端\ndump($request-&gt;isMobile());\n</code></pre></li>\n<li><p>系统函数</p>\n<pre><code>dump(request()-&gt;isGet());\ndump(request()-&gt;isMobile());\n</code></pre></li>\n</ol>\n<h2 id=\"13-模拟put、delete请求\"><a href=\"#13-模拟put、delete请求\" class=\"headerlink\" title=\"13.模拟put、delete请求\"></a>13.模拟put、delete请求</h2><ol>\n<li><p>使用</p>\n<pre><code>&lt;form action=&quot;{:url(&apos;type&apos;)}&quot; method=&quot;post&quot;&gt;\n    &lt;p&gt;\n        User:\n        &lt;input type=&quot;text&quot; name=&quot;name&quot; id=&quot;&quot;&gt;\n        &lt;input type=&quot;hidden&quot; name=&quot;_method&quot; value=&quot;PUT&quot;&gt;\n    &lt;/p&gt;\n    &lt;p&gt;\n        Pass:\n        &lt;input type=&quot;password&quot; name=&quot;pass&quot; id=&quot;&quot;&gt;\n    &lt;/p&gt;\n    &lt;p&gt;\n        &lt;input type=&quot;submit&quot; value=&quot;提交&quot;&gt;\n    &lt;/p&gt;\n&lt;/form&gt;\n</code></pre></li>\n<li><p>注意</p>\n<ol>\n<li>表单的请求类型必须是post</li>\n<li>需要设置隐藏域传递模拟请求类型</li>\n</ol>\n</li>\n</ol>\n<h2 id=\"14-模拟ajax请求和PJAX请求\"><a href=\"#14-模拟ajax请求和PJAX请求\" class=\"headerlink\" title=\"14.模拟ajax请求和PJAX请求\"></a>14.模拟ajax请求和PJAX请求</h2><ol>\n<li><p>模拟ajax请求</p>\n<pre><code>http://www.tp.com/index.php/index/index/type?_ajax=10\n</code></pre></li>\n<li><p>模拟pjax请求</p>\n<pre><code>http://www.tp.com/index.php/index/index/type?_pjax=10\n</code></pre></li>\n</ol>\n<h2 id=\"15-伪静态\"><a href=\"#15-伪静态\" class=\"headerlink\" title=\"15.伪静态\"></a>15.伪静态</h2><ol>\n<li><p>作用</p>\n<ol>\n<li>URL伪静态通常是为了满足更好的SEO效果</li>\n<li>为了网站的安全</li>\n</ol>\n</li>\n<li><p>修改伪静态</p>\n<pre><code>在配置文件中进行修改\n&apos;url_html_suffix&apos;        =&gt; &apos;shtml&apos;,\n</code></pre></li>\n<li><p>获取当前的伪静态后缀</p>\n<pre><code>$request-&gt;ext();\n</code></pre></li>\n</ol>\n<h2 id=\"16-参数绑定\"><a href=\"#16-参数绑定\" class=\"headerlink\" title=\"16.参数绑定\"></a>16.参数绑定</h2><ol>\n<li><p>使用</p>\n<pre><code>public function banding($id,$name=&quot;admin&quot;){\n    dump($id);\n    dump($name);\n}\n\nhttp://www.tp.com/index.php/index/index/banding/id/1/name/user\n</code></pre></li>\n<li><p>注意</p>\n<ol>\n<li>参数绑定的个数，少于地址栏参数的个数</li>\n<li>参数绑定的名字，必须和地址栏参数名字一一对应</li>\n<li>参数绑定可以设置默认值</li>\n</ol>\n</li>\n</ol>\n<h1 id=\"第7章-TP5-0数据库操作\"><a href=\"#第7章-TP5-0数据库操作\" class=\"headerlink\" title=\"第7章 TP5.0数据库操作\"></a>第7章 TP5.0数据库操作</h1><h2 id=\"1-TP5-0-支持数据库类型\"><a href=\"#1-TP5-0-支持数据库类型\" class=\"headerlink\" title=\"1. TP5.0 支持数据库类型\"></a>1. TP5.0 支持数据库类型</h2><p>Mysql、SqlServer、PgSQL、Sqlite等数据库的支持。</p>\n<h2 id=\"2-如何连接数据库\"><a href=\"#2-如何连接数据库\" class=\"headerlink\" title=\"2. 如何连接数据库\"></a>2. 如何连接数据库</h2><ol>\n<li><p>配置文件定义</p>\n<ol>\n<li>配置文件目录 C:\\AppServ\\www\\tp5\\application\\database.php</li>\n<li><p>如何配置</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">return</span> [</span><br><span class=\"line\">    <span class=\"comment\">// 数据库类型</span></span><br><span class=\"line\">    <span class=\"string\">'type'</span>            =&gt; <span class=\"string\">'mysql'</span>,</span><br><span class=\"line\">    <span class=\"comment\">// 服务器地址</span></span><br><span class=\"line\">    <span class=\"string\">'hostname'</span>        =&gt; <span class=\"string\">'127.0.0.1'</span>,</span><br><span class=\"line\">    <span class=\"comment\">// 数据库名</span></span><br><span class=\"line\">    <span class=\"string\">'database'</span>        =&gt; <span class=\"string\">'yzmedu'</span>,</span><br><span class=\"line\">    <span class=\"comment\">// 用户名</span></span><br><span class=\"line\">    <span class=\"string\">'username'</span>        =&gt; <span class=\"string\">'root'</span>,</span><br><span class=\"line\">    <span class=\"comment\">// 密码</span></span><br><span class=\"line\">    <span class=\"string\">'password'</span>        =&gt; <span class=\"string\">'123456789'</span>,</span><br><span class=\"line\">    <span class=\"comment\">// 端口</span></span><br><span class=\"line\">    <span class=\"string\">'hostport'</span>        =&gt; <span class=\"string\">'3306'</span>,</span><br><span class=\"line\">];</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>如何使用</p>\n <figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 实例化系统数据库类</span></span><br><span class=\"line\"> $DB=<span class=\"keyword\">new</span> Db;</span><br><span class=\"line\"><span class=\"comment\">// 查询数据</span></span><br><span class=\"line\">$data=$DB::table(<span class=\"string\">\"user\"</span>)-&gt;select();</span><br><span class=\"line\"> <span class=\"comment\">// 使用sql语句</span></span><br><span class=\"line\">$data=$DB::query(<span class=\"string\">\"select * from user\"</span>);</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n</li>\n<li><p>方法配置</p>\n<ol>\n<li><p>使用数组</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$Db=Db::connect([</span><br><span class=\"line\">   \t\t\t\t\t<span class=\"comment\">// 数据库类型</span></span><br><span class=\"line\">   \t\t\t\t\t<span class=\"string\">'type'</span>            =&gt; <span class=\"string\">'mysql'</span>,</span><br><span class=\"line\">   \t\t\t\t\t<span class=\"comment\">// 服务器地址</span></span><br><span class=\"line\">   \t\t\t\t\t<span class=\"string\">'hostname'</span>        =&gt; <span class=\"string\">'127.0.0.1'</span>,</span><br><span class=\"line\">   \t\t\t\t\t<span class=\"comment\">// 数据库名</span></span><br><span class=\"line\">   \t\t\t\t\t<span class=\"string\">'database'</span>        =&gt; <span class=\"string\">'yzmedu2'</span>,</span><br><span class=\"line\">   \t\t\t\t\t<span class=\"comment\">// 用户名</span></span><br><span class=\"line\">   \t\t\t\t\t<span class=\"string\">'username'</span>        =&gt; <span class=\"string\">'root'</span>,</span><br><span class=\"line\">   \t\t\t\t\t<span class=\"comment\">// 密码</span></span><br><span class=\"line\">   \t\t\t\t\t<span class=\"string\">'password'</span>        =&gt; <span class=\"string\">'123456789'</span>,</span><br><span class=\"line\">   \t\t\t\t\t<span class=\"comment\">// 端口</span></span><br><span class=\"line\">   \t\t\t\t\t<span class=\"string\">'hostport'</span>        =&gt; <span class=\"string\">'3306'</span>,</span><br><span class=\"line\">   </span><br><span class=\"line\">   \t\t\t\t]);</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>使用字符串</p>\n <figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$Db=Db::connect(<span class=\"string\">\"mysql://root:123456789@127.0.0.1:3306/yzmedu#utf8\"</span>);</span><br><span class=\"line\"><span class=\"comment\">// 数据库类型://用户名:密码@数据库地址:数据库端口/数据库名#字符集</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>如何使用 <code>$data=$Db-&gt;table(&quot;user&quot;)-&gt;select();</code></p>\n</li>\n</ol>\n</li>\n<li><p>模型类定义</p>\n<ol>\n<li>创建数据模型<ol>\n<li>命令行创建<ul>\n<li>切换到项目目录</li>\n<li>执行命令 php think make:model app\\index\\model\\User</li>\n</ul>\n</li>\n<li>手动创建<ul>\n<li>打开数据模型目录        C:\\AppServ\\www\\tp5\\application\\index\\model</li>\n<li>在目录下新建 文件 User.php</li>\n<li>在文件中书写代码<pre><code>namespace app\\index\\model;\nuse think\\Model;\nclass User extends Model\n</code></pre></li>\n</ul>\n</li>\n</ol>\n</li>\n<li></li>\n</ol>\n</li>\n</ol>\n<h1 id=\"第八章-模型\"><a href=\"#第八章-模型\" class=\"headerlink\" title=\"第八章 模型\"></a>第八章 模型</h1><h1 id=\"第8章-TP5-0-模型\"><a href=\"#第8章-TP5-0-模型\" class=\"headerlink\" title=\"第8章 TP5.0 模型\"></a>第8章 TP5.0 模型</h1><p>今日学习</p>\n<p>1、模型(model)</p>\n<pre><code>数据模型\n</code></pre><p>2、新建数据模型</p>\n<pre><code>1) 手动新建\n\n    a、打开前台模块(C:\\AppServ\\www\\tp5\\application\\index)\n\n        新建model目录\n\n    b、在model目录下 新建 User.php\n\n        // 声明命名空间\n        namespace app\\index\\model;\n\n        // 导入系统的数据模型\n\n        use think\\Model;\n\n        // 声明user模型\n\n        class User extends Model{\n\n        }\n\n2) 命令新建\n\n    1) 切换到项目目录\n\n        php think make:model app\\index\\model\\Users\n\n\n3) 注意\n\n    1、数据模型的名字 建议大家跟数据库名一致\n\n    2、如果数据库名字和模型名不一致 可以设置表名\n\n        protected $table=&quot;&quot;;\n\n    3、如果表名(yzm_user),数据模型名 (YzmUser)\n</code></pre><p>3、模型的实例化</p>\n<pre><code>1、调用静态方法\n\n    $res=User::get(1);\n    dump($res-&gt;toArray());\n\n2、实例化数据模型\n\n    $user=new User();\n    $res=$user::get(2);\n    dump($res-&gt;toArray());\n\n3、使用loader\n\n    $user=Loader::model(&quot;user&quot;);\n    $res=$user::get(3);\n    dump($res-&gt;toArray());\n\n4、使用助手函数\n\n    $user=model(&quot;user&quot;);\n    $res=$user::get(4);\n    dump($res-&gt;toArray());\n</code></pre><p>4、查询操作</p>\n<pre><code>1、单条数据\n\n    // get方法\n        // 使用数字\n        $res=User::get(1); // 默认主键\n        // 使用数组\n        $res=User::get([&quot;name&quot;=&gt;&apos;yzmedu3&apos;]);  // 默认查找用户名\n\n        // 使用闭包函数\n        $res=User::get(function($query){\n            $query-&gt;where(&quot;id&quot;,15);\n        });\n    // find方法\n\n        $res=User::where(&quot;id&quot;,13)-&gt;find();\n\n2、查询多条数据\n\n    // all\n        // 所有数据\n        $res=User::all();\n\n        // 字符串\n        $res=User::all(&quot;1,2,3&quot;);\n\n        // 数组\n        $res=User::all([5,6,7]);\n\n        // 数组\n\n        $res=User::all([&apos;pass&apos;=&gt;&apos;123&apos;]);\n\n        // 闭包\n\n        $res=User::all(function($query){\n            $query-&gt;where(&quot;pass&quot;,&quot;123&quot;)\n                -&gt;whereOr(&quot;pass&quot;,&quot;456&quot;)\n                -&gt;order(&quot;id&quot;,&quot;desc&quot;);\n        });\n\n    // select 和 all 基本类似\n\n        $res=User::select();\n        $res=User::limit(2)-&gt;select();\n\n3、获取某个字段和某列值\n\n    // 获取某个值\n    $res=User::where(&quot;id&quot;,5)-&gt;value(&quot;name&quot;);\n\n    // 获取某列值\n\n    $res=User::column(&quot;name&quot;,&quot;id&quot;);\n\n4、动态查询\n    // 查询出匹配到的第一条数据\n    // getBy字段名\n    $res=User::getByAge(&apos;44&apos;);\n    dump($res-&gt;toArray());\n</code></pre><p>5、增加操作</p>\n<pre><code>1、设置属性\n    $user=new User();\n    $user-&gt;name=&quot;yzmedu21&quot;;\n    $user-&gt;pass=&quot;abc&quot;;\n    $user-&gt;age=18;\n    // 返回影响行数\n    $user-&gt;save();\n\n2、通过data方法\n    $user=new User();\n\n    $user-&gt;data([\n        &quot;name&quot;=&gt;&quot;yzmedu22&quot;,\n        &quot;age&quot;=&gt;&quot;22&quot;,\n        &quot;pass&quot;=&gt;&quot;qwe&quot;,\n        ]);\n\n    // 返回影响行数\n    $user-&gt;save();\n\n3、实例化时\n\n    $user=new User([\n        &quot;name&quot;=&gt;&quot;yzmedu23&quot;,\n        &quot;pass&quot;=&gt;&apos;zxc&apos;,\n        &quot;age&quot;=&gt;20\n        ]);\n    // 返回影响行数\n    $user-&gt;save();\n    // allowField 屏蔽掉数据库中不存在的字段\n    $user-&gt;allowField(true)-&gt;save();\n    // 指定插入数据库的字段\n    $user-&gt;allowField([&apos;name&apos;,&apos;age&apos;])-&gt;save();\n\n4、获取自增的ID\n    // 获取插入数据ID\n    echo $user-&gt;id;\n\n5、增加多条数据\n\n    $user=new User();\n\n    $list=[\n        [&apos;name&apos;=&gt;&quot;yzmedu33&quot;,&quot;age&quot;=&gt;33],\n        [&apos;name&apos;=&gt;&quot;yzmedu34&quot;,&quot;age&quot;=&gt;34]\n\n    ];\n\n    $user-&gt;saveAll($list);\n\n6、create方法\n    $user=User::create([\n        &quot;name&quot;=&gt;&quot;yzmedu35&quot;,\n        &quot;age&quot;=&gt;35\n        ]);\n</code></pre><p>6、删除操作</p>\n<pre><code>// $user=User::get(1);\n// 返回影响行数\n// dump($user-&gt;delete());\n\n// 删除主键2\n$user=User::destroy(2);\n\n// 删除主键3,4,5\n$user=User::destroy(&quot;3,4,5&quot;);\n$user=User::destroy([6,7,8]);\n\n// 删除name\n\n$user=User::destroy([&apos;name&apos;=&gt;&quot;yzmedu23&quot;]);\n\n// 删除多个条件\n\n$user=User::destroy([&apos;name&apos;=&gt;&apos;yzmedu33&apos;,&apos;age&apos;=&gt;33]);\n\n// 使用闭包\n\n$user=User::destroy(function($query){\n\n    $query-&gt;where(&quot;id&quot;,&quot;&lt;&quot;,&quot;15&quot;);\n});\n\n// 删除数据\n\n$user=User::where(&quot;id&quot;,&quot;&gt;&quot;,&quot;19&quot;)-&gt;delete();\n\ndump($user);\n</code></pre><p>7、修改操作</p>\n<pre><code>// 设置字段更新数据\n\n    $user=User::get(15);\n\n    $user-&gt;age=19;\n\n    $res=$user-&gt;save();\n\n// 直接数组修改\n\n    $user=new User;\n\n    $res=$user-&gt;save(\n        [\n            &quot;pass&quot;=&gt;&quot;qweasd&quot;,\n            &quot;age&quot;=&gt;16,\n\n        ],[&quot;id&quot;=&gt;16]);\n\n// 修改数据\n\n    $_POST[&apos;name&apos;]=&quot;yzmedu55&quot;;\n    $_POST[&apos;pass&apos;]=&quot;pass55&quot;;\n    $_POST[&apos;age&apos;]=&quot;55&quot;;\n    $_POST[&apos;sex&apos;]=&quot;nan&quot;;\n    $_POST[&apos;id&apos;]=17;\n\n    $user=new User;\n\n    $res=$user-&gt;allowField([&apos;name&apos;,&apos;pass&apos;,&apos;age&apos;])-&gt;save($_POST,[&apos;id&apos;=&gt;17]);\n\n// 批量更新\n\n\n    $data=[\n        [&apos;id&apos;=&gt;15,&apos;name&apos;=&gt;&quot;abc&quot;,&apos;pass&apos;=&gt;456],\n        [&apos;id&apos;=&gt;17,&apos;name&apos;=&gt;&quot;abc&quot;,&apos;pass&apos;=&gt;456],\n    ];\n\n    $user=new User;\n\n    $res=$user-&gt;saveAll($data);\n\n    echo User::getLastSql();\n\n// 更新操作\n\n    $user=new User;\n\n    $res=$user-&gt;where(&quot;id&quot;,&apos;&gt;&apos;,&apos;17&apos;)-&gt;update([&apos;age&apos;=&gt;18]);\n\n    $res=User::where(&quot;id&quot;,&quot;&lt;&quot;,&quot;18&quot;)-&gt;update([&apos;pass&apos;=&gt;&apos;zxc&apos;]);\n\n// 闭包更新数据\n\n    $user=new User;\n\n    $res=$user-&gt;save([&apos;name&apos;=&gt;&apos;yunzhimeng&apos;],function($query){\n        $query-&gt;where(&quot;id&quot;,&quot;15&quot;);\n    });\n</code></pre><p>8、聚合</p>\n<pre><code>// 统计数据条数\n$tot=User::count();\n\ndump($tot);\n\n// 条件判断\n$tot=User::where(&quot;age&quot;,&quot;&gt;&quot;,18)-&gt;count();\ndump($tot);\n\n// 统计最大值\n\n$max=User::max(&apos;age&apos;);\n\ndump($max);\n\n// 统计最小值\n\n$min=User::min(&quot;age&quot;);\n\ndump($min);\n\n// 平均值\n$avg=User::avg(&apos;age&apos;);\n\ndump($avg);\n\n// 求和\n$sum=User::sum(&apos;age&apos;);\ndump($sum);\n</code></pre><p>9、获取器</p>\n<pre><code>1、数据模型\n\n    // sex 的获取器\n    public function getSexAttr($val){\n        switch ($val) {\n            case &apos;0&apos;:\n                return &quot;未知&quot;;\n                break;\n            case &quot;1&quot;:\n                return &quot;男&quot;;\n                break;\n            case &quot;2&quot;:\n                return &quot;女&quot;;\n                break;\n        }\n    }\n\n\n2、控制器\n\n    // 获取ID为15 的数据\n    $user=User::get(17);\n\n    // 经过获取器的操作\n    dump($user-&gt;toArray()); \n    dump($user-&gt;sex);\n\n    // 不经过获取器处理\n    dump($user-&gt;getData());\n\n\n3、注意\n\n    1、如果字段 user_status 修改器名字getUserStatusAttr\n    2、如果字段 status 修改器名字getStatusAttr\n</code></pre><p>10、修改器<br>    1、数据模型</p>\n<pre><code>    // 用户密码的修改器\n\n    public function setPassAttr($val){\n\n        return md5($val);\n    }\n\n\n2、控制器\n\n    // 修改 ID 为15 的密码\n\n    $user=new User();\n\n    // 密码会实现自动加密\n    $res=$user-&gt;save([&apos;pass&apos;=&gt;&apos;456&apos;],[&apos;id&apos;=&gt;15]);\n\n    dump($res);\n\n\n3、注意\n\n    1、修改器的触发条件是 save方法\n</code></pre><p>11、自动完成</p>\n<pre><code>1、修改器和自动完成区别\n\n    修改器:数据赋值的时候自动进行转换处理\n    自动完成:没有手动赋值的情况下进行手动处理\n\n2、自动完成\n\n    // 增加和修改操作都会执行\n    protected $auto=[];\n    // 创建数据执行\n    protected $insert=[&apos;create_time&apos;];\n    // 修改数据执行\n    protected $update=[&apos;update_time&apos;];\n</code></pre><p>12、时间戳</p>\n<pre><code>1、系统支持自动写入创建和更新的时间戳字段\n    1) 在配置文件中设置\n        // 自动写入时间戳字段\n        &apos;auto_timestamp&apos;  =&gt; true,\n\n    2) 在数据模型中设置\n\n        // 设置自动写入时间戳\n        protected $autoWriteTimestamp=true;\n\n2、可以设置字段默认值\n\n    // 增加时间的字段\n    protected $createTime=&apos;create_times&apos;;\n    // 更新时间的字段\n    protected $updateTime=&apos;update_times&apos;;\n\n3、取消更新时间戳设置\n\n    protected $updateTime=false;\n</code></pre><p>14、软删除</p>\n<pre><code>1、作用：\n\n    实现假删除，可以进行恢复\n\n2、实现\n\n    &lt;?php \n        // 声明命名空间\n        namespace app\\index\\model;\n        // 导入系统的数据模型\n        use think\\Model;\n        // 配合软删除\n        use traits\\model\\SoftDelete;\n        // 声明user模型\n        class User extends Model{\n            // 使用软删除\n            use SoftDelete;\n            // 设置删除的时间戳\n            protected $deleteTime=&quot;delete_times&quot;;\n\n        }\n\n3、控制器   \n\n\n    1、删除数据\n\n        $res=User::destroy(15);\n\n    2、获取数据\n\n        $res=User::get(15);\n        // 软删除 数据库数据存在，但是get获取不到\n\n    3、直接删除数据\n\n        $res=User::destroy(14,true);\n\n        $user=new User();\n\n        $res=$user-&gt;where(&quot;id&quot;,&apos;5&apos;)-&gt;delete();\n\n    4、读取所有数据包含软删除数据\n\n        $res=User::withTrashed()-&gt;find(15);\n        $res=User::withTrashed()-&gt;select();\n\n    5、仅仅读取软删除数据\n\n        $res=User::onlyTrashed()-&gt;select();\n        $res=User::onlyTrashed()-&gt;find(1);\n</code></pre><p>第八章 shop案例出现的各种问题<br>1.自动生成目录结构<br>1.位置   D:\\wamp\\www\\shop\\build.php<br>2.规则<br>      ○ <strong>dir</strong> 表示生成目录（支持多级目录）<br>      ○ <strong>file</strong> 表示生成文件（不定义默认会生成 config.php 文件）<br>      ○ controller 表示生成controller类<br>      ○ model表示生成model类<br>      ○ view表示生成html文件（支持子目录）<br>example:</p>\n<p>3.命令行生成</p>\n<blockquote>\n<p>php think build  //默认会读取应用目录application下面的build.php 作为自动生成的定义文件<br>php think build –config build.php  //表示读取根目录下的build.php文件</p>\n</blockquote>\n<p>2.Validate<br>1.ThinkPHP5.0验证使用独立的\\think\\Validate类或者验证器进行验证。<br>2.用法：<br>1.</p>\n<p>2.</p>\n<p>3.方法在\\www\\shop\\thinkphp\\library\\think\\Validate.php中</p>\n<p>3.百度地图<br>1.根据地址获取经纬度类的封装<br>开发—web服务开发找到geocoding api</p>\n<p>2.根据经纬度地址调取百度地图</p>\n<p>3.用法：<br>1.设置参数（www\\shop\\application\\extra\\map.php</p>\n<p>2.写获取URL的相关方法：（www\\shop\\application\\common.php</p>\n<p>3.根据地址获取经纬度类的封装（D:\\wamp\\www\\shop\\extend\\Map.php</p>\n<p>4.根据经纬度地址调取百度地图</p>\n<p>5.调用（www\\shop\\application\\index\\controller\\Index.php</p>\n<p>6.在模板中调用</p>\n<p>4.利用phpmailer发送邮件<br>1.下载phpmailer.zip<br>2.创建phpmailer文件夹（在extend下</p>\n<p>3.新建Email.php（方法内写test参数</p>\n<p>4.调用<br>\\phpmailer\\Email::send(参数);<br>5.上传图片<br>1.下载uploadity.zip<br>2.编写image.js</p>\n","categories":[{"name":"编程","slug":"编程","count":11,"path":"api/categories/编程.json"}],"tags":[{"name":"php","slug":"php","count":6,"path":"api/tags/php.json"},{"name":"框架","slug":"框架","count":2,"path":"api/tags/框架.json"}]}