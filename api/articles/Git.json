{"title":"Git","slug":"Git","date":"2017-11-20T06:47:04.000Z","updated":"2017-12-21T09:28:59.403Z","comments":true,"path":"api/articles/Git.json","photos":[],"link":"","excerpt":"git的使用，参照廖雪峰老师的课程<br>","covers":["http://note.youdao.com/noteshare?id=f32d02f2663068d52c260a6f70d18d00"],"content":"<p>git的使用，参照廖雪峰老师的课程<br><a id=\"more\"></a></p>\n<h3 id=\"1-初始化\"><a href=\"#1-初始化\" class=\"headerlink\" title=\"1.初始化\"></a>1.初始化</h3><ol>\n<li>下载Git终端</li>\n<li>初始化一个git仓库  <strong>$ git init</strong> (创建文件readme.txt)</li>\n<li>将文件添加到暂存区  <strong>$ git add readme.txt</strong> (可以出现多个add)</li>\n<li>提交  <strong>$ git commit -m “提交说明(备注)”</strong></li>\n</ol>\n<h3 id=\"2-掌握工作区的状态\"><a href=\"#2-掌握工作区的状态\" class=\"headerlink\" title=\"2.掌握工作区的状态\"></a>2.掌握工作区的状态</h3><ol>\n<li>掌握工作区的状态  <strong>$ git status</strong></li>\n<li>查看修改内容  <strong>$ git diff</strong></li>\n</ol>\n<h3 id=\"3-历史记录\"><a href=\"#3-历史记录\" class=\"headerlink\" title=\"3.历史记录\"></a>3.历史记录</h3><ol>\n<li>记录  <strong>$ git log</strong> (log中的一大串类似于乱码的东西是commit id)</li>\n<li>回到之前的版本  <strong>$ git reset –hard HEAD^</strong> (HEAD后面有几个^就是倒数第几个版本，往上一百个版本是 HEAD~100)</li>\n<li>退回后log发送变化，则可以根据 <strong>$ git reset –hard commit id</strong> 来修改</li>\n<li>预览此刻的readme.txt  <strong>$ cat readme.txt</strong></li>\n<li>记录每次命令，可以用来查看commit id <strong>$ git reflog</strong></li>\n</ol>\n<h3 id=\"4-撤回修改\"><a href=\"#4-撤回修改\" class=\"headerlink\" title=\"4.撤回修改\"></a>4.撤回修改</h3><ol>\n<li>若只在工作区 <strong>$ git checkout –readme.txt</strong></li>\n<li>若提交到暂存区  先用<strong>$ git reset HEAD readme.txt</strong> ,再用1即可</li>\n<li>若提交到版本区，则用版本回退  <strong>$ git reset –hard HEAD^</strong></li>\n</ol>\n<h3 id=\"5-删除\"><a href=\"#5-删除\" class=\"headerlink\" title=\"5.删除\"></a>5.删除</h3><ol>\n<li>在文件夹中删除或用终端 $rm 之后</li>\n<li>误删：从版本库中恢复  <strong>$ git checkout –readme.txt</strong></li>\n<li>彻底删除 <strong>$ git rm readme.txt</strong></li>\n</ol>\n<h3 id=\"6-远程关联GitHub和码云\"><a href=\"#6-远程关联GitHub和码云\" class=\"headerlink\" title=\"6.远程关联GitHub和码云\"></a>6.远程关联GitHub和码云</h3><ol>\n<li>新建同名项目 learngit</li>\n<li></li>\n</ol>\n<table>\n<thead>\n<tr>\n<th>命令</th>\n<th>作用</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>$ git remote add github git@github.com:Gail-Guo/learngit.git</td>\n<td>GitHub</td>\n</tr>\n<tr>\n<td>$ git remote rm github</td>\n<td>GitHub删除关联</td>\n</tr>\n<tr>\n<td>$ git push github master(第一次更新在push后加-u)</td>\n<td>Github更新</td>\n</tr>\n<tr>\n<td>$ git remote add gitee git@gitee.com:isgail/learn.git</td>\n<td>码云</td>\n</tr>\n<tr>\n<td>$ git remote rm gitee</td>\n<td>码云删除关联</td>\n</tr>\n<tr>\n<td>$ git push gitee master</td>\n<td>码云更新</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"7-从GitHub上克隆\"><a href=\"#7-从GitHub上克隆\" class=\"headerlink\" title=\"7.从GitHub上克隆\"></a>7.从GitHub上克隆</h3><ol>\n<li><strong>$ git clone git@github.com:Gail-Guo/项目.git</strong></li>\n</ol>\n<h3 id=\"8-分支\"><a href=\"#8-分支\" class=\"headerlink\" title=\"8.分支\"></a>8.分支</h3><ol>\n<li>创建分支并合并</li>\n</ol>\n<table>\n<thead>\n<tr>\n<th>命令</th>\n<th>作用</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>$ git checkout -b dev</td>\n<td>创建dev分支并切换</td>\n</tr>\n<tr>\n<td>$ git branch dev</td>\n<td>创建分支</td>\n</tr>\n<tr>\n<td>$ git checkout dev</td>\n<td>切换到dev</td>\n</tr>\n<tr>\n<td>$ git branch</td>\n<td>查看当前分支</td>\n</tr>\n<tr>\n<td>$ git merge dev</td>\n<td>合并到master(先切换到master)</td>\n</tr>\n<tr>\n<td>$ git branch -d dev</td>\n<td>删除分支</td>\n</tr>\n</tbody>\n</table>\n<ol>\n<li>产生冲突可以修改之后再提交</li>\n<li><strong>$ git log –graph</strong> 可以看到分支合并图</li>\n<li>禁用fast forward 的参数 –no-f</li>\n</ol>\n<h3 id=\"9-bug\"><a href=\"#9-bug\" class=\"headerlink\" title=\"9.bug\"></a>9.bug</h3><ol>\n<li>修复bug时，会通过建立新的bug分支进行修复，然后合并删除分支</li>\n<li>将当前工作储藏起来 <strong>$ git stash</strong></li>\n<li>恢复1 <strong>$ git stash apply –&gt; $ git stash drop</strong></li>\n<li>恢复2 <strong>$ git stash pop</strong></li>\n<li>查看工作现场 <strong>$ git stash list</strong></li>\n<li>丢弃一个未合并的分支，强行删除 <strong>$ git branch -D dev</strong></li>\n</ol>\n<h3 id=\"10-标签\"><a href=\"#10-标签\" class=\"headerlink\" title=\"10.标签\"></a>10.标签</h3><ol>\n<li>创建tag <strong>$ git tag V1.0</strong></li>\n<li>查看 <strong>$ git tag</strong></li>\n<li>查看tag具体信息 <strong>$ git show V1.0</strong></li>\n<li>删除 <strong>$ git tag -d V1.0</strong></li>\n<li>推送到GitHub <strong>$ git push github –tags</strong></li>\n<li>从远程删除 <strong>$ git push github:refs/tags/V1.0</strong></li>\n</ol>\n<h3 id=\"11-配置别名\"><a href=\"#11-配置别名\" class=\"headerlink\" title=\"11.配置别名\"></a>11.配置别名</h3><ol>\n<li>$ git config –global alias.别名 原命令</li>\n</ol>\n<h3 id=\"12\"><a href=\"#12\" class=\"headerlink\" title=\"12.\"></a>12.</h3><p><img src=\"http://note.youdao.com/noteshare?id=f32d02f2663068d52c260a6f70d18d00\" alt=\"image\"></p>\n","categories":[{"name":"编程","slug":"编程","count":11,"path":"api/categories/编程.json"}],"tags":[{"name":"git","slug":"git","count":1,"path":"api/tags/git.json"}]}